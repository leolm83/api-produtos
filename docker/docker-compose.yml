version: '3'
services:
  auth-db:
    image: postgres:11.21-bullseye
    environment:
      POSTGRES_PASSWORD: development
      POSTGRES_USER: development
    volumes:
      - ./entrypoint:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
  product-db:
    image: postgres:11.21-bullseye
    environment:
      POSTGRES_PASSWORD: development
      POSTGRES_USER: development
    volumes:
      - ./entrypoint:/docker-entrypoint-initdb.d/
    ports:
      - 5433:5432

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8085:8085
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"

  rabbitmq:
    image: rabbitmq:3.12.14-management-alpine
    restart: unless-stopped
    ports:
        - 5672:5672 
        - 25676:2567
        - 15672:15672
    environment:
        RABBITMQ_DEFAULT_USER: development
        RABBITMQ_DEFAULT_PASS: development
  auth-api:
    build: 
      dockerfile: "./docker/project/auth-api/Dockerfile"
      context: ../
    container_name: auth-api
    environment:
      - PORT=8080
    ports:
      - 8080:8080
  product-api:
    build:
      dockerfile: "./Dockerfile"
      context: "../java/product-api/"
    container_name: product-api
    environment:
      - PORT=8081
    ports:
      - 8081:8081
  sales-api:
    build: 
      dockerfile: "./docker/project/auth-api/Dockerfile"
      context: ../
    container_name: sales-api
    environment:
      - PORT=8082
    ports:
      - 8082:8082
  
